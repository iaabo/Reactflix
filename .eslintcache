[{"/Users/inesbarroso/Desktop/reactflix/src/index.js":"1","/Users/inesbarroso/Desktop/reactflix/src/App.js":"2","/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js":"3","/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js":"4","/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js":"5","/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js":"6","/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js":"7","/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js":"8","/Users/inesbarroso/Desktop/reactflix/src/components/Navbar.js":"9","/Users/inesbarroso/Desktop/reactflix/src/components/NavBar.js":"10","/Users/inesbarroso/Desktop/reactflix/src/components/HeaderMovie.js":"11","/Users/inesbarroso/Desktop/reactflix/src/components/FooterMovie.js":"12"},{"size":359,"mtime":1612454086860,"results":"13","hashOfConfig":"14"},{"size":654,"mtime":1612541650559,"results":"15","hashOfConfig":"14"},{"size":3185,"mtime":1612544916169,"results":"16","hashOfConfig":"14"},{"size":1364,"mtime":1612519818098,"results":"17","hashOfConfig":"14"},{"size":2540,"mtime":1612533418263,"results":"18","hashOfConfig":"14"},{"size":1196,"mtime":1612382813905,"results":"19","hashOfConfig":"14"},{"size":436,"mtime":1612382985646,"results":"20","hashOfConfig":"14"},{"size":1105,"mtime":1612465235667,"results":"21","hashOfConfig":"14"},{"size":987,"mtime":1612452962014,"results":"22","hashOfConfig":"14"},{"size":1005,"mtime":1612538834059,"results":"23","hashOfConfig":"14"},{"size":2207,"mtime":1612540167094,"results":"24","hashOfConfig":"14"},{"size":403,"mtime":1612545325327,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17bhy97",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/inesbarroso/Desktop/reactflix/src/index.js",[],["57","58"],"/Users/inesbarroso/Desktop/reactflix/src/App.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js",["59"],"import React, { useState, useEffect } from \"react\";\nimport Movie from \"../components/Movie\";\nimport HeaderMovie from \"../components/HeaderMovie\";\nimport ReactPaginate from \"react-paginate\";\nimport { Form } from \"react-bootstrap\";\nimport \"./Movie.css\";\n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [moviesPerPage] = useState(6);\n  const [pageCount, setPageCount] = useState(0);\n\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/wildcodeschoolparis/datas/master/movies.json\"\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.errors) {\n          setMovies(response.movies);\n          setPageCount(Math.ceil(response.movies.length / moviesPerPage))\n          console.log(movies);\n          setGenres(response.genres);\n        } else {\n          setMovies([]);\n        }\n      });\n  }, []);\n\n  // Pagination\n\n  const pagesVisited = currentPage * moviesPerPage;\n\n  const changePage = ({ selected }) => {\n    setCurrentPage(selected);\n  };\n\n\n  \n  //filtering onChange\n  \n  const handleChange = (e) => {\n    const currentGenre = e.target.value\n    // async\n    setSelectedGenre(currentGenre);\n    \n    // sync\n    const filteredMovies = movies.filter((movie) =>\n    currentGenre !== \"\" ? movie.genres.includes(currentGenre) : movie\n    );\n    setPageCount(Math.ceil(filteredMovies.length / moviesPerPage));\n  };\n\n  return (\n    <div>\n      <HeaderMovie />\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center m-3\">\n          <Form.Control as=\"select\" custom onChange={handleChange}>\n            <option value=\"\" selected disabled hidden>\n              Filter by Genre\n            </option>\n            <option value=\"\"> Display All</option>\n            {genres.map((genre, index) => (\n              <option value={genre} key={index}>\n                {genre}\n              </option>\n            ))}\n          </Form.Control>\n        </div>\n        <div className=\"row justify-content-md-center\">\n          <ReactPaginate\n            previousLabel={\"Prev\"}\n            nextLabel={\"Next\"}\n            pageCount={pageCount}\n            onPageChange={changePage}\n            marginPagesDisplayed={0}\n            pageRangeDisplayed={1}\n            breakLabel=\"...\"\n            containerClassName={\"paginationBttns\"}\n            previousLinkClassName={\"previousBttns\"}\n            nextLinkClassName={\"nextBttn\"}\n            disabledClassName={\"paginationDisabled\"}\n            activeClassName={\"paginationActive\"}\n          />\n        </div>\n        <div className=\"row justify-content-center\">\n          {movies\n            .filter((movie) =>\n              selectedGenre !== \"\"\n                ? movie.genres.includes(selectedGenre)\n                : movie\n            )\n            .slice(pagesVisited, pagesVisited + moviesPerPage)\n            .map((movie) => (\n              <Movie {...movie} key={movie.id} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MovieList;\n","/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js",["60"],"import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Card, Button, ButtonGroup, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { generatePath } from \"react-router-dom\";\n\nconst Movie = (movie) => {\n  const { addMovieToWatchlist, watchlist } = useContext(GlobalContext);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  let storedMovie = watchlist.find((o) => o.id === movie.id);\n\n  //disable button\n  const watchlistDisabled = storedMovie ? true : false;\n\n  return (\n    <div className=\"d-flex justify-content-between m-3\">\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={movie.posterUrl}\n          alt={movie.title}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src =\n              \"https://images.pexels.com/photos/2672097/pexels-photo-2672097.jpeg?cs=srgb&dl=pexels-markus-spiske-2672097.jpg&fm=jpg\";\n          }}\n        />\n        <Card.Body>\n          <Card.Title>{movie.title}</Card.Title>\n          <ButtonGroup className=\"d-flex justify-content-between\">\n            <Button variant=\"warning\" onClick={handleShow}>\n              Info\n            </Button>\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton className=\"movie-title\">\n                {movie.title}\n              </Modal.Header>\n              <Modal.Body>\n                <div>\n                  <p>{movie.plot}</p>\n                  <p>Director: {movie.director}</p>\n                  <p>Year: {movie.year}</p>\n                  <p>Runtime: {movie.runtime} min </p>\n                  <div style={{ display: \"flex\" }}>\n                    {movie.genres.map((genre) => (\n                      <p className=\"genre\">{genre}</p>\n                    ))}\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"warning\" onClick={handleClose}>\n                  Return to Search\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Button\n              variant=\"danger\"\n              disabled={watchlistDisabled}\n              onClick={() => addMovieToWatchlist(movie)}\n            >\n              Add to Watchlist\n            </Button>\n          </ButtonGroup>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Movie;\n","/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js",[],"/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js",["61"],"export default (state, action) => {\n  \n    switch (action.type) {\n\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    default:\n        \n      return state;\n  }\n};\n",["62","63"],"/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js",["64"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Card, Button, ButtonGroup } from \"react-bootstrap\";\n\nconst WatchedMovie = ({ movie, type }) => {\n  const { removeMovieFromWatchlist } = useContext(GlobalContext);\n\n  return (\n    <div className=\"d-flex justify-content-between m-3\">\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={movie.posterUrl}\n          alt={movie.title}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src =\n              \"https://images.pexels.com/photos/2672097/pexels-photo-2672097.jpeg?cs=srgb&dl=pexels-markus-spiske-2672097.jpg&fm=jpg\";\n          }}\n        />\n        <Card.Body>\n          <Card.Title>{movie.title}</Card.Title>\n          <Button className=\"d-flex justify-content-between\"\n            variant=\"danger\"\n            onClick={() => removeMovieFromWatchlist(movie.id)}\n          >\n            Remove from Watchlist\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default WatchedMovie;\n","/Users/inesbarroso/Desktop/reactflix/src/components/Navbar.js",["65","66"],"/Users/inesbarroso/Desktop/reactflix/src/components/NavBar.js",["67"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Navbar, Col } from \"react-bootstrap\";\nimport logo from \"../assets/logo_transparent.png\";\n\nconst NavBar = () => {\n  const { watchlist } = useContext(GlobalContext);\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              alt=\"\"\n              className=\"logo\"\n              style={{ height: \"40px\", width: \"180px\" }}\n            />\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Collapse>\n          <Link\n            to=\"/watchlist\"\n            style={{ color: \"white\", textDecoration: \"none\" }}\n          >\n            <Button variant=\"danger\">\n              <span> Watchlist ({watchlist.length})</span>\n            </Button>\n          </Link>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","/Users/inesbarroso/Desktop/reactflix/src/components/HeaderMovie.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/FooterMovie.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":31,"column":6,"nodeType":"74","endLine":31,"endColumn":8,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":22},{"ruleId":"80","severity":1,"message":"81","line":1,"column":1,"nodeType":"82","endLine":22,"endColumn":3},{"ruleId":"68","replacedBy":"83"},{"ruleId":"70","replacedBy":"84"},{"ruleId":"76","severity":1,"message":"85","line":3,"column":24,"nodeType":"78","messageId":"79","endLine":3,"endColumn":35},{"ruleId":"86","severity":2,"message":"87","line":9,"column":8,"nodeType":"88","endLine":9,"endColumn":14},{"ruleId":"86","severity":2,"message":"87","line":10,"column":10,"nodeType":"88","endLine":10,"endColumn":16},{"ruleId":"76","severity":1,"message":"89","line":4,"column":26,"nodeType":"78","messageId":"79","endLine":4,"endColumn":29},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'movies' and 'moviesPerPage'. Either include them or remove the dependency array.","ArrayExpression",["92"],"no-unused-vars","'generatePath' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["90"],["91"],"'ButtonGroup' is defined but never used.","react/jsx-no-undef","'Navbar' is not defined.","JSXIdentifier","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [movies, moviesPerPage]",{"range":"95","text":"96"},[1042,1044],"[movies, moviesPerPage]"]
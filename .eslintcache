[{"/Users/inesbarroso/Desktop/reactflix/src/index.js":"1","/Users/inesbarroso/Desktop/reactflix/src/App.js":"2","/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js":"3","/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js":"4","/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js":"5","/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js":"6","/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js":"7","/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js":"8","/Users/inesbarroso/Desktop/reactflix/src/components/HeaderMovie.js":"9","/Users/inesbarroso/Desktop/reactflix/src/components/FooterMovie.js":"10","/Users/inesbarroso/Desktop/reactflix/src/components/NavMovie.js":"11"},{"size":359,"mtime":1612454086860,"results":"12","hashOfConfig":"13"},{"size":662,"mtime":1612546141479,"results":"14","hashOfConfig":"13"},{"size":3185,"mtime":1612566753292,"results":"15","hashOfConfig":"13"},{"size":1364,"mtime":1612519818098,"results":"16","hashOfConfig":"13"},{"size":2540,"mtime":1612533418263,"results":"17","hashOfConfig":"13"},{"size":1196,"mtime":1612382813905,"results":"18","hashOfConfig":"13"},{"size":436,"mtime":1612382985646,"results":"19","hashOfConfig":"13"},{"size":1105,"mtime":1612465235667,"results":"20","hashOfConfig":"13"},{"size":2207,"mtime":1612540167094,"results":"21","hashOfConfig":"13"},{"size":403,"mtime":1612545325327,"results":"22","hashOfConfig":"13"},{"size":1009,"mtime":1612546115049,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"17bhy97",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/Users/inesbarroso/Desktop/reactflix/src/index.js",[],["52","53"],"/Users/inesbarroso/Desktop/reactflix/src/App.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js",["54"],"/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js",["55"],"import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Card, Button, ButtonGroup, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { generatePath } from \"react-router-dom\";\n\nconst Movie = (movie) => {\n  const { addMovieToWatchlist, watchlist } = useContext(GlobalContext);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  let storedMovie = watchlist.find((o) => o.id === movie.id);\n\n  //disable button\n  const watchlistDisabled = storedMovie ? true : false;\n\n  return (\n    <div className=\"d-flex justify-content-between m-3\">\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={movie.posterUrl}\n          alt={movie.title}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src =\n              \"https://images.pexels.com/photos/2672097/pexels-photo-2672097.jpeg?cs=srgb&dl=pexels-markus-spiske-2672097.jpg&fm=jpg\";\n          }}\n        />\n        <Card.Body>\n          <Card.Title>{movie.title}</Card.Title>\n          <ButtonGroup className=\"d-flex justify-content-between\">\n            <Button variant=\"warning\" onClick={handleShow}>\n              Info\n            </Button>\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton className=\"movie-title\">\n                {movie.title}\n              </Modal.Header>\n              <Modal.Body>\n                <div>\n                  <p>{movie.plot}</p>\n                  <p>Director: {movie.director}</p>\n                  <p>Year: {movie.year}</p>\n                  <p>Runtime: {movie.runtime} min </p>\n                  <div style={{ display: \"flex\" }}>\n                    {movie.genres.map((genre) => (\n                      <p className=\"genre\">{genre}</p>\n                    ))}\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"warning\" onClick={handleClose}>\n                  Return to Search\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Button\n              variant=\"danger\"\n              disabled={watchlistDisabled}\n              onClick={() => addMovieToWatchlist(movie)}\n            >\n              Add to Watchlist\n            </Button>\n          </ButtonGroup>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Movie;\n","/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js",[],"/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js",["56"],"export default (state, action) => {\n  \n    switch (action.type) {\n\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    default:\n        \n      return state;\n  }\n};\n",["57","58"],"/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js",["59"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Card, Button, ButtonGroup } from \"react-bootstrap\";\n\nconst WatchedMovie = ({ movie, type }) => {\n  const { removeMovieFromWatchlist } = useContext(GlobalContext);\n\n  return (\n    <div className=\"d-flex justify-content-between m-3\">\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={movie.posterUrl}\n          alt={movie.title}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src =\n              \"https://images.pexels.com/photos/2672097/pexels-photo-2672097.jpeg?cs=srgb&dl=pexels-markus-spiske-2672097.jpg&fm=jpg\";\n          }}\n        />\n        <Card.Body>\n          <Card.Title>{movie.title}</Card.Title>\n          <Button className=\"d-flex justify-content-between\"\n            variant=\"danger\"\n            onClick={() => removeMovieFromWatchlist(movie.id)}\n          >\n            Remove from Watchlist\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default WatchedMovie;\n","/Users/inesbarroso/Desktop/reactflix/src/components/HeaderMovie.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/FooterMovie.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/NavMovie.js",["60"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Navbar, Col } from \"react-bootstrap\";\nimport logo from \"../assets/logo_transparent.png\";\n\nconst NavMovie = () => {\n  const { watchlist } = useContext(GlobalContext);\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              alt=\"\"\n              className=\"logo\"\n              style={{ height: \"40px\", width: \"180px\" }}\n            />\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Collapse>\n          <Link\n            to=\"/watchlist\"\n            style={{ color: \"white\", textDecoration: \"none\" }}\n          >\n            <Button variant=\"danger\">\n              <span> Watchlist ({watchlist.length})</span>\n            </Button>\n          </Link>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavMovie;\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":31,"column":6,"nodeType":"67","endLine":31,"endColumn":8,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":1,"column":1,"nodeType":"75","endLine":22,"endColumn":3},{"ruleId":"61","replacedBy":"76"},{"ruleId":"63","replacedBy":"77"},{"ruleId":"69","severity":1,"message":"78","line":3,"column":24,"nodeType":"71","messageId":"72","endLine":3,"endColumn":35},{"ruleId":"69","severity":1,"message":"79","line":4,"column":26,"nodeType":"71","messageId":"72","endLine":4,"endColumn":29},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'movies' and 'moviesPerPage'. Either include them or remove the dependency array.","ArrayExpression",["82"],"no-unused-vars","'generatePath' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["80"],["81"],"'ButtonGroup' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [movies, moviesPerPage]",{"range":"85","text":"86"},[1042,1044],"[movies, moviesPerPage]"]
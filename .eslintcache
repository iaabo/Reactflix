[{"/Users/inesbarroso/Desktop/reactflix/src/index.js":"1","/Users/inesbarroso/Desktop/reactflix/src/App.js":"2","/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js":"3","/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js":"4","/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js":"5","/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js":"6","/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js":"7","/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js":"8","/Users/inesbarroso/Desktop/reactflix/src/components/HeaderMovie.js":"9","/Users/inesbarroso/Desktop/reactflix/src/components/FooterMovie.js":"10","/Users/inesbarroso/Desktop/reactflix/src/components/NavMovie.js":"11"},{"size":359,"mtime":1612454086860,"results":"12","hashOfConfig":"13"},{"size":662,"mtime":1612546141479,"results":"14","hashOfConfig":"13"},{"size":3185,"mtime":1612544916169,"results":"15","hashOfConfig":"13"},{"size":1364,"mtime":1612519818098,"results":"16","hashOfConfig":"13"},{"size":2540,"mtime":1612533418263,"results":"17","hashOfConfig":"13"},{"size":1196,"mtime":1612382813905,"results":"18","hashOfConfig":"13"},{"size":436,"mtime":1612382985646,"results":"19","hashOfConfig":"13"},{"size":1105,"mtime":1612465235667,"results":"20","hashOfConfig":"13"},{"size":2207,"mtime":1612540167094,"results":"21","hashOfConfig":"13"},{"size":403,"mtime":1612545325327,"results":"22","hashOfConfig":"13"},{"size":1009,"mtime":1612546115049,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"17bhy97",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/inesbarroso/Desktop/reactflix/src/index.js",[],["52","53"],"/Users/inesbarroso/Desktop/reactflix/src/App.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js",["54"],"import React, { useState, useEffect } from \"react\";\nimport Movie from \"../components/Movie\";\nimport HeaderMovie from \"../components/HeaderMovie\";\nimport ReactPaginate from \"react-paginate\";\nimport { Form } from \"react-bootstrap\";\nimport \"./Movie.css\";\n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [moviesPerPage] = useState(6);\n  const [pageCount, setPageCount] = useState(0);\n\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/wildcodeschoolparis/datas/master/movies.json\"\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.errors) {\n          setMovies(response.movies);\n          setPageCount(Math.ceil(response.movies.length / moviesPerPage))\n          console.log(movies);\n          setGenres(response.genres);\n        } else {\n          setMovies([]);\n        }\n      });\n  }, []);\n\n  // Pagination\n\n  const pagesVisited = currentPage * moviesPerPage;\n\n  const changePage = ({ selected }) => {\n    setCurrentPage(selected);\n  };\n\n\n  \n  //filtering onChange\n  \n  const handleChange = (e) => {\n    const currentGenre = e.target.value\n    // async\n    setSelectedGenre(currentGenre);\n    \n    // sync\n    const filteredMovies = movies.filter((movie) =>\n    currentGenre !== \"\" ? movie.genres.includes(currentGenre) : movie\n    );\n    setPageCount(Math.ceil(filteredMovies.length / moviesPerPage));\n  };\n\n  return (\n    <div>\n      <HeaderMovie />\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center m-3\">\n          <Form.Control as=\"select\" custom onChange={handleChange}>\n            <option value=\"\" selected disabled hidden>\n              Filter by Genre\n            </option>\n            <option value=\"\"> Display All</option>\n            {genres.map((genre, index) => (\n              <option value={genre} key={index}>\n                {genre}\n              </option>\n            ))}\n          </Form.Control>\n        </div>\n        <div className=\"row justify-content-md-center\">\n          <ReactPaginate\n            previousLabel={\"Prev\"}\n            nextLabel={\"Next\"}\n            pageCount={pageCount}\n            onPageChange={changePage}\n            marginPagesDisplayed={0}\n            pageRangeDisplayed={1}\n            breakLabel=\"...\"\n            containerClassName={\"paginationBttns\"}\n            previousLinkClassName={\"previousBttns\"}\n            nextLinkClassName={\"nextBttn\"}\n            disabledClassName={\"paginationDisabled\"}\n            activeClassName={\"paginationActive\"}\n          />\n        </div>\n        <div className=\"row justify-content-center\">\n          {movies\n            .filter((movie) =>\n              selectedGenre !== \"\"\n                ? movie.genres.includes(selectedGenre)\n                : movie\n            )\n            .slice(pagesVisited, pagesVisited + moviesPerPage)\n            .map((movie) => (\n              <Movie {...movie} key={movie.id} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MovieList;\n","/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js",["55"],"import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Card, Button, ButtonGroup, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { generatePath } from \"react-router-dom\";\n\nconst Movie = (movie) => {\n  const { addMovieToWatchlist, watchlist } = useContext(GlobalContext);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  let storedMovie = watchlist.find((o) => o.id === movie.id);\n\n  //disable button\n  const watchlistDisabled = storedMovie ? true : false;\n\n  return (\n    <div className=\"d-flex justify-content-between m-3\">\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={movie.posterUrl}\n          alt={movie.title}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src =\n              \"https://images.pexels.com/photos/2672097/pexels-photo-2672097.jpeg?cs=srgb&dl=pexels-markus-spiske-2672097.jpg&fm=jpg\";\n          }}\n        />\n        <Card.Body>\n          <Card.Title>{movie.title}</Card.Title>\n          <ButtonGroup className=\"d-flex justify-content-between\">\n            <Button variant=\"warning\" onClick={handleShow}>\n              Info\n            </Button>\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton className=\"movie-title\">\n                {movie.title}\n              </Modal.Header>\n              <Modal.Body>\n                <div>\n                  <p>{movie.plot}</p>\n                  <p>Director: {movie.director}</p>\n                  <p>Year: {movie.year}</p>\n                  <p>Runtime: {movie.runtime} min </p>\n                  <div style={{ display: \"flex\" }}>\n                    {movie.genres.map((genre) => (\n                      <p className=\"genre\">{genre}</p>\n                    ))}\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"warning\" onClick={handleClose}>\n                  Return to Search\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Button\n              variant=\"danger\"\n              disabled={watchlistDisabled}\n              onClick={() => addMovieToWatchlist(movie)}\n            >\n              Add to Watchlist\n            </Button>\n          </ButtonGroup>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Movie;\n",["56","57"],"/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js",[],"/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js",["58"],"export default (state, action) => {\n  \n    switch (action.type) {\n\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    default:\n        \n      return state;\n  }\n};\n","/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js",["59"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Card, Button, ButtonGroup } from \"react-bootstrap\";\n\nconst WatchedMovie = ({ movie, type }) => {\n  const { removeMovieFromWatchlist } = useContext(GlobalContext);\n\n  return (\n    <div className=\"d-flex justify-content-between m-3\">\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={movie.posterUrl}\n          alt={movie.title}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src =\n              \"https://images.pexels.com/photos/2672097/pexels-photo-2672097.jpeg?cs=srgb&dl=pexels-markus-spiske-2672097.jpg&fm=jpg\";\n          }}\n        />\n        <Card.Body>\n          <Card.Title>{movie.title}</Card.Title>\n          <Button className=\"d-flex justify-content-between\"\n            variant=\"danger\"\n            onClick={() => removeMovieFromWatchlist(movie.id)}\n          >\n            Remove from Watchlist\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default WatchedMovie;\n","/Users/inesbarroso/Desktop/reactflix/src/components/HeaderMovie.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/FooterMovie.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/NavMovie.js",["60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":31,"column":6,"nodeType":"67","endLine":31,"endColumn":8,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":22},{"ruleId":"61","replacedBy":"73"},{"ruleId":"63","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":1,"nodeType":"77","endLine":22,"endColumn":3},{"ruleId":"69","severity":1,"message":"78","line":3,"column":24,"nodeType":"71","messageId":"72","endLine":3,"endColumn":35},{"ruleId":"69","severity":1,"message":"79","line":4,"column":26,"nodeType":"71","messageId":"72","endLine":4,"endColumn":29},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'movies' and 'moviesPerPage'. Either include them or remove the dependency array.","ArrayExpression",["82"],"no-unused-vars","'generatePath' is defined but never used.","Identifier","unusedVar",["80"],["81"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ButtonGroup' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [movies, moviesPerPage]",{"range":"85","text":"86"},[1042,1044],"[movies, moviesPerPage]"]
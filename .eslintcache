[{"/Users/inesbarroso/Desktop/reactflix/src/index.js":"1","/Users/inesbarroso/Desktop/reactflix/src/App.js":"2","/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js":"3","/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js":"4","/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js":"5","/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js":"6","/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js":"7","/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js":"8","/Users/inesbarroso/Desktop/reactflix/src/components/Navbar.js":"9","/Users/inesbarroso/Desktop/reactflix/src/components/Modal.js":"10","/Users/inesbarroso/Desktop/reactflix/src/components/NavBar.js":"11"},{"size":359,"mtime":1612454086860,"results":"12","hashOfConfig":"13"},{"size":578,"mtime":1612452993917,"results":"14","hashOfConfig":"13"},{"size":998,"mtime":1612394580260,"results":"15","hashOfConfig":"13"},{"size":748,"mtime":1612452349661,"results":"16","hashOfConfig":"13"},{"size":1480,"mtime":1612393709578,"results":"17","hashOfConfig":"13"},{"size":1196,"mtime":1612382813905,"results":"18","hashOfConfig":"13"},{"size":436,"mtime":1612382985646,"results":"19","hashOfConfig":"13"},{"size":749,"mtime":1612392794427,"results":"20","hashOfConfig":"13"},{"size":965,"mtime":1612453872546,"results":"21","hashOfConfig":"13"},{"size":348,"mtime":1612392855876,"results":"22","hashOfConfig":"13"},{"size":965,"mtime":1612453872546,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17bhy97",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},"/Users/inesbarroso/Desktop/reactflix/src/index.js",[],"/Users/inesbarroso/Desktop/reactflix/src/App.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js",["51","52"],"import React, { useState, useEffect } from \"react\";\nimport Movie from \"../components/Movie\";\nimport { animateScroll as scroll } from \"react-scroll\";\n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/wildcodeschoolparis/datas/master/movies.json\"\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.errors) {\n          setMovies(response.movies);\n          console.log(movies);\n          setGenres(response.genres);\n        } else {\n          setMovies([]);\n        }\n      });\n  }, []);\n\n\n  \n  let onClickUp = () => {\n    scroll.scrollToTop();\n  };\n\n  return (\n    <div>\n  \n      {movies.map((movie) => (\n        <Movie {...movie} key={movie.id} />\n      ))}\n      <div className=\"row justifyCenter\">\n        <button onClick={onClickUp}>Go to top</button>\n      </div>\n    </div>\n  );\n};\nexport default MovieList;\n",["53","54"],"/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js",["55","56"],"import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport Modal from \"./Modal\";\n\nconst Movie = (movie) => {\n  const { addMovieToWatchlist, watchlist } = useContext(GlobalContext);\n  const [isActive, setIsActive] = React.useState(false);\n  const [buttonPopup, setButtonPopup] = useState(false);\n\n  let storedMovie = watchlist.find((o) => o.id === movie.id);\n\n  //disable button\n  const watchlistDisabled = storedMovie ? true : false;\n\n  return (\n    <div>\n      <img\n        src={movie.posterUrl}\n        alt={movie.title}\n        onError={(e) => {\n          e.target.onerror = null;\n          e.target.src =\n            \"https://images.pexels.com/photos/2672097/pexels-photo-2672097.jpeg?cs=srgb&dl=pexels-markus-spiske-2672097.jpg&fm=jpg\";\n        }}\n        style={{ width: \"200px\", height: \"300px\" }}\n      />\n      <h1>{movie.title}</h1>\n      <button onClick={() => setButtonPopup(true)}>Info</button>\n      <Modal trigger={buttonPopup} setTrigger={setButtonPopup}>\n        <div>\n          <p>Plot: {movie.plot}</p>\n          <p>Director: {movie.director}</p>\n          <p>Year:{movie.year}</p>\n          <p>Genre: {movie && movie.genres[0]}</p>\n          <p>Duration: {movie.runtime} min </p>\n        </div>\n      </Modal>\n      <button\n        disabled={watchlistDisabled}\n        onClick={() => addMovieToWatchlist(movie)}\n      >\n        Add to Watchlist\n      </button>\n    </div>\n  );\n};\n\nexport default Movie;\n","/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js",[],"/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js",["57"],"export default (state, action) => {\n  \n    switch (action.type) {\n\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    default:\n        \n      return state;\n  }\n};\n","/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/Navbar.js",["58","59"],"/Users/inesbarroso/Desktop/reactflix/src/components/Modal.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/NavBar.js",["60"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Nav, Navbar, Col } from \"react-bootstrap\";\nimport logo from \"../assets/logo_transparent.png\";\n\nconst NavBar = () => {\n  return (\n    <div>\n      <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              alt=\"\"\n              className=\"logo\"\n              style={{ height: \"40px\", width: \"180px\" }}\n            />\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Col xs={6} md={2}>\n            <Button variant=\"danger\">\n              <Link\n                to=\"/watchlist\"\n                style={{ color: \"white\", textDecoration: \"none\" }}\n              >\n                Watchlist\n              </Link>\n            </Button>\n          </Col>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n",{"ruleId":"61","severity":1,"message":"62","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":23,"column":6,"nodeType":"67","endLine":23,"endColumn":8,"suggestions":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"61","severity":1,"message":"73","line":7,"column":10,"nodeType":"63","messageId":"64","endLine":7,"endColumn":18},{"ruleId":"61","severity":1,"message":"74","line":7,"column":20,"nodeType":"63","messageId":"64","endLine":7,"endColumn":31},{"ruleId":"75","severity":1,"message":"76","line":1,"column":1,"nodeType":"77","endLine":22,"endColumn":3},{"ruleId":"78","severity":2,"message":"79","line":9,"column":8,"nodeType":"80","endLine":9,"endColumn":14},{"ruleId":"78","severity":2,"message":"79","line":10,"column":10,"nodeType":"80","endLine":10,"endColumn":16},{"ruleId":"61","severity":1,"message":"81","line":3,"column":18,"nodeType":"63","messageId":"64","endLine":3,"endColumn":21},"no-unused-vars","'genres' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.","ArrayExpression",["82"],"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'isActive' is assigned a value but never used.","'setIsActive' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-undef","'Navbar' is not defined.","JSXIdentifier","'Nav' is defined but never used.",{"desc":"85","fix":"86"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [movies]",{"range":"87","text":"88"},[666,668],"[movies]"]
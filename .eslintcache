[{"/Users/inesbarroso/Desktop/reactflix/src/index.js":"1","/Users/inesbarroso/Desktop/reactflix/src/App.js":"2","/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js":"3","/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js":"4","/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js":"5","/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js":"6","/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js":"7","/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js":"8","/Users/inesbarroso/Desktop/reactflix/src/components/Navbar.js":"9","/Users/inesbarroso/Desktop/reactflix/src/components/NavBar.js":"10","/Users/inesbarroso/Desktop/reactflix/src/components/HeaderMovie.js":"11","/Users/inesbarroso/Desktop/reactflix/src/components/FooterMovie.js":"12"},{"size":359,"mtime":1612454086860,"results":"13","hashOfConfig":"14"},{"size":654,"mtime":1612527112390,"results":"15","hashOfConfig":"14"},{"size":2660,"mtime":1612526308260,"results":"16","hashOfConfig":"14"},{"size":1364,"mtime":1612519818098,"results":"17","hashOfConfig":"14"},{"size":2459,"mtime":1612519850204,"results":"18","hashOfConfig":"14"},{"size":1196,"mtime":1612382813905,"results":"19","hashOfConfig":"14"},{"size":436,"mtime":1612382985646,"results":"20","hashOfConfig":"14"},{"size":1105,"mtime":1612465235667,"results":"21","hashOfConfig":"14"},{"size":987,"mtime":1612452962014,"results":"22","hashOfConfig":"14"},{"size":1005,"mtime":1612483231311,"results":"23","hashOfConfig":"14"},{"size":2022,"mtime":1612526621212,"results":"24","hashOfConfig":"14"},{"size":391,"mtime":1612527848652,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17bhy97",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/inesbarroso/Desktop/reactflix/src/index.js",[],["55","56"],"/Users/inesbarroso/Desktop/reactflix/src/App.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/MovieList.js",["57","58","59","60"],"import React, { useState, useEffect } from \"react\";\nimport Movie from \"../components/Movie\";\nimport HeaderMovie from \"../components/HeaderMovie\";\nimport ReactPaginate from \"react-paginate\";\nimport { Form } from \"react-bootstrap\";\nimport \"./Movie.css\";\n\nconst MovieList = () => {\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [moviesPerPage] = useState(6);\n\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/wildcodeschoolparis/datas/master/movies.json\"\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        if (!response.errors) {\n          setMovies(response.movies);\n          console.log(movies);\n          setGenres(response.genres);\n        } else {\n          setMovies([]);\n        }\n      });\n  }, []);\n\n  // Pagination\n\n  const pagesVisited = currentPage * moviesPerPage;\n  const pageCount = Math.ceil(movies.length / moviesPerPage);\n  const changePage = ({ selected }) => {\n    setCurrentPage(selected);\n  };\n\n  //filtering onChange\n\n  return (\n    <div>\n      <HeaderMovie />\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center m-3\">\n          <Form.Control as=\"select\" custom /* onChange Method*/>\n            <option value=\"\" selected disabled hidden> \n              Filter by Genre\n            </option>\n            {genres.map((genre, index) => (\n              <option value={genre} key={index}>\n                {genre}\n              </option>\n            ))} \n          </Form.Control> \n        </div>\n        <div className=\"row justify-content-md-center\">\n          <ReactPaginate\n            previousLabel={\"Prev\"}\n            nextLabel={\"Next\"}\n            pageCount={pageCount}\n            onPageChange={changePage}\n            marginPagesDisplayed={0}\n            pageRangeDisplayed={1}\n            breakLabel=\"...\"\n            containerClassName={\"paginationBttns\"}\n            previousLinkClassName={\"previousBttns\"}\n            nextLinkClassName={\"nextBttn\"}\n            disabledClassName={\"paginationDisabled\"}\n            activeClassName={\"paginationActive\"}\n          />\n        </div>\n        <div className=\"row justify-content-center\">\n          {movies\n            .slice(pagesVisited, pagesVisited + moviesPerPage)\n            .filter((movie) => movie.genre === movie.genre) //call the filteredthing function\n            .map((movie) => (\n              <Movie {...movie} key={movie.id} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MovieList;\n","/Users/inesbarroso/Desktop/reactflix/src/components/WatchList.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/Movie.js",[],"/Users/inesbarroso/Desktop/reactflix/src/context/GlobalState.js",[],"/Users/inesbarroso/Desktop/reactflix/src/context/AppReducer.js",["61"],"export default (state, action) => {\n  \n    switch (action.type) {\n\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    default:\n        \n      return state;\n  }\n};\n","/Users/inesbarroso/Desktop/reactflix/src/components/WatchedMovie.js",["62"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Card, Button, ButtonGroup } from \"react-bootstrap\";\n\nconst WatchedMovie = ({ movie, type }) => {\n  const { removeMovieFromWatchlist } = useContext(GlobalContext);\n\n  return (\n    <div className=\"d-flex justify-content-between m-3\">\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img\n          variant=\"top\"\n          src={movie.posterUrl}\n          alt={movie.title}\n          onError={(e) => {\n            e.target.onerror = null;\n            e.target.src =\n              \"https://images.pexels.com/photos/2672097/pexels-photo-2672097.jpeg?cs=srgb&dl=pexels-markus-spiske-2672097.jpg&fm=jpg\";\n          }}\n        />\n        <Card.Body>\n          <Card.Title>{movie.title}</Card.Title>\n          <Button className=\"d-flex justify-content-between\"\n            variant=\"danger\"\n            onClick={() => removeMovieFromWatchlist(movie.id)}\n          >\n            Remove from Watchlist\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default WatchedMovie;\n","/Users/inesbarroso/Desktop/reactflix/src/components/Navbar.js",["63","64"],"/Users/inesbarroso/Desktop/reactflix/src/components/NavBar.js",["65"],"import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Navbar, Col } from \"react-bootstrap\";\nimport logo from \"../assets/logo_transparent.png\";\n\nconst NavBar = () => {\n  const { watchlist } = useContext(GlobalContext);\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>\n          <Link to=\"/\">\n            <img\n              src={logo}\n              alt=\"\"\n              className=\"logo\"\n              style={{ height: \"40px\", width: \"180px\" }}\n            />\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Collapse>\n          <Link\n            to=\"/watchlist\"\n            style={{ color: \"white\", textDecoration: \"none\" }}\n          >\n            <Button variant=\"danger\">\n              <span> Watchlist ({watchlist.length})</span>\n            </Button>\n          </Link>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default NavBar;\n","/Users/inesbarroso/Desktop/reactflix/src/components/HeaderMovie.js",[],"/Users/inesbarroso/Desktop/reactflix/src/components/FooterMovie.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":11,"column":10,"nodeType":"72","messageId":"73","endLine":11,"endColumn":23},{"ruleId":"70","severity":1,"message":"74","line":11,"column":25,"nodeType":"72","messageId":"73","endLine":11,"endColumn":41},{"ruleId":"75","severity":1,"message":"76","line":29,"column":6,"nodeType":"77","endLine":29,"endColumn":8,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":76,"column":32,"nodeType":"81","messageId":"82","endLine":76,"endColumn":59},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","endLine":22,"endColumn":3},{"ruleId":"70","severity":1,"message":"86","line":3,"column":24,"nodeType":"72","messageId":"73","endLine":3,"endColumn":35},{"ruleId":"87","severity":2,"message":"88","line":9,"column":8,"nodeType":"89","endLine":9,"endColumn":14},{"ruleId":"87","severity":2,"message":"88","line":10,"column":10,"nodeType":"89","endLine":10,"endColumn":16},{"ruleId":"70","severity":1,"message":"90","line":4,"column":26,"nodeType":"72","messageId":"73","endLine":4,"endColumn":29},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'selectedGenre' is assigned a value but never used.","Identifier","unusedVar","'setSelectedGenre' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movies'. Either include it or remove the dependency array.","ArrayExpression",["93"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ButtonGroup' is defined but never used.","react/jsx-no-undef","'Navbar' is not defined.","JSXIdentifier","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [movies]",{"range":"96","text":"97"},[919,921],"[movies]"]